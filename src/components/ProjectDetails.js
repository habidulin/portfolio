import React from "react";
import { useParams, Link, useNavigate } from "react-router-dom";
import { useTranslation } from "react-i18next";
import PropTypes from "prop-types";

const ProjectDetails = ({ projects }) => {
  const { t } = useTranslation();
  const { id } = useParams();
  const navigate = useNavigate();
  const project = projects.find((p) => String(p.id) === id);

  if (!project) {
    React.useEffect(() => {
      navigate('/projects');
    }, [navigate]);
    return null;
  }

  // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
  const projectDetails = t(`projects.project_details.${id}`, { returnObjects: true });
  
  // –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const nextProjectId = projects.find(p => p.id > project.id)?.id || projects[0].id;

  return (
    <div className="p-4 max-w-4xl mx-auto">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ */}
      <h1 className="text-3xl font-bold mb-2">{projectDetails.title || t(`projects.project_${project.id}_title`)}</h1>
      <p className="text-gray-600 mb-6">üìç {projectDetails.location} ¬∑ {projectDetails.period}</p>

      {/* –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      {project.images && (
        <div className="mb-8">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            {project.images.map((img, idx) => (
              <img
                key={idx}
                src={img.src}
                alt={img.alt}
                className="w-full h-48 object-cover rounded-lg shadow-md"
              />
            ))}
          </div>
        </div>
      )}

      {/* –ü—Ä–æ–±–ª–µ–º–∞ */}
      <div className="mb-6">
        <h2 className="text-xl font-bold mb-2">‚ùó {t("common.problem")}</h2>
        <p className="text-gray-700">{projectDetails.problem}</p>
      </div>

      {/* –†–µ—à–µ–Ω–∏–µ */}
      <div className="mb-6">
        <h2 className="text-xl font-bold mb-2">üí° {t("common.solution")}</h2>
        <div className="text-gray-700 space-y-2">
          {projectDetails.solution?.split('\n').map((line, i) => (
            <p key={i}>{line}</p>
          ))}
        </div>
      </div>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
      <div className="mb-6">
        <h2 className="text-xl font-bold mb-2">üìà {t("common.results")}</h2>
        <div className="text-gray-700 space-y-2">
          {projectDetails.results?.split('\n').map((line, i) => (
            <p key={i} className="text-green-700 font-medium">{line}</p>
          ))}
        </div>
      </div>

      {/* –†–æ–ª—å –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <div>
          <h2 className="text-lg font-bold mb-2">üë®‚Äçüíº {t("common.role")}</h2>
          <p className="text-gray-700">{projectDetails.role}</p>
        </div>
        
        <div>
          <h2 className="text-lg font-bold mb-2">üîó {t("common.technologies")}</h2>
          <p className="text-gray-700">{projectDetails.technologies}</p>
        </div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="flex flex-col md:flex-row justify-between mt-10 pt-4 border-t border-gray-200">
        <Link
          to="/projects"
          className="text-blue-500 hover:text-blue-700 mb-4 md:mb-0 flex items-center"
        >
          {t("common.back_to_all_projects")}
        </Link>
        
        <Link 
          to={`/projects/${nextProjectId}`}
          className="text-blue-500 hover:text-blue-700 flex items-center"
        >
          üëâ {t("common.next_project")}
        </Link>
      </div>
    </div>
  );
};

ProjectDetails.propTypes = {
  projects: PropTypes.array.isRequired,
};

export default ProjectDetails;